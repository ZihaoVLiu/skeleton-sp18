/** Simpler demo of the In class. */public class NBody {	public static double readRadius(String file){		In in = new In(file);		int Pnumber = in.readInt();		double radius = in.readDouble();		return radius;	}		public static Planet[] readPlanets(String file){		In in = new In(file);		int Pnumber = in.readInt();		double radius = in.readDouble();				Planet[] pArray = new Planet[Pnumber];		int count = 0;		while (count < Pnumber) {			double xxPos = in.readDouble();			double yyPos = in.readDouble();			double xxVel = in.readDouble();			double yyVel = in.readDouble();			double mass = in.readDouble();			String imgFileName = in.readString();			pArray[count] = new Planet(xxPos, yyPos, xxVel, yyVel, mass, imgFileName);			count += 1;		}		return pArray;	}		public static void main(String[] args) {		if (args.length == 0) {			System.out.println("Please supply three parameters as command line argument.");		}				double T = Double.parseDouble(args[0]);		double dt = Double.parseDouble(args[1]);		String filename = args[2];		double radius = readRadius(filename);				/** set background. */		String imageToDraw = "images/starfield.jpg";		/** set the scale to matches the radius of the universe. */		StdDraw.setScale(-radius, radius);		/* Clears the drawing window. */		StdDraw.clear();		/* Stamps three copies of advice.png in a triangular pattern. */		StdDraw.picture(0, 0, imageToDraw);		/* Shows the drawing to the screen, and waits 2000 milliseconds. */		StdDraw.show();				Planet[] parray = readPlanets(filename);		for (Planet p : parray) {			p.draw();		}				StdDraw.enableDoubleBuffering();				double time = 0;		while (time < T) {			double[] xForces = new double[parray.length];			double[] yForces = new double[parray.length];			for (int i = 0; i < parray.length; i++) {				xForces[i] = parray[i].calcNetForceExertedByX(parray);				yForces[i] = parray[i].calcNetForceExertedByY(parray);			}			for (int i = 0; i < parray.length; i++) {				parray[i].update(dt, xForces[i], yForces[i]);			}			StdDraw.picture(0, 0, imageToDraw);			for (Planet p : parray) {				p.draw();			}			StdDraw.show();			StdDraw.pause(10);			time = time + dt;		}				StdOut.printf("%d\n", parray.length);		StdOut.printf("%.2e\n", radius);		for (int i = 0; i < parray.length; i++) {		    StdOut.printf("%11.4e %11.4e %11.4e %11.4e %11.4e %12s\n",                  parray[i].xxPos, parray[i].yyPos, parray[i].xxVel,                  parray[i].yyVel, parray[i].mass, parray[i].imgFileName);   		}	}} 